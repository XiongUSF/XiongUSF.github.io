./spark-submit --master spark://hadoop3:7077 --deploy-mode client --class org.apache.spark.examples.SparkPi ../lib/spark-examples-1.3.0-hadoop2.3.0.jar
./bin/spark-submit  \  --master spark://xiongjunjiedeMacBook-Pro.local:7077 \--class org.apache.spark.examples.SparkPi \  /Users/xiongjunjie/Documents/1.jar   1000
./bin/spark-submit --master yarn --deploy-mode client --class org.apache.spark.examples.SparkPi /Users/xiongjunjie/Documents/1.jar   


./bin/spark-submit --class com.ibm.spark.exercise.mllib.KMeansClustering \
 --master spark://xiongjunjiedeMacBook-Pro.local:7077 \
 --num-executors 6 \
--driver-memory 3g \
--executor-memory 512m \
--total-executor-cores 6 \
/Users/xiongjunjie/Documents/1.jar   



./bin/spark-submit \
  --master spark://xiongjunjiedeMacBook-Pro.local:7077 \
  examples/src/main/python/pi.py \
  1000

  ./bin/spark-submit --class sparkscala01.WordCount  --master spark://xiongjunjiedeMacBook-Pro.local:7077  --num-executors 6 --driver-memory 3g --executor-memory 512m --total-executor-cores 6 /Users/xiongjunjie/Documents/1.jar

  ./bin/spark-submit --class com.junjie.WordCount  --master spark://192.168.253.3:7077  --num-executors 6 --driver-memory 3g --executor-memory 512m --total-executor-cores 6 /Users/xiongjunjie/Documents/junjie_WordCount.jar

./bin/spark-submit --class com.junjie.KMeansClustering \
 --master spark://192.168.253.3:7077 \
 --num-executors 6 \
--driver-memory 3g \
--executor-memory 512m \
--total-executor-cores 6 \
 /Users/xiongjunjie/Documents/junjie_k-means.jar \
 /Users/xiongjunjie/Documents/wholesale_customers_data.txt \
 /Users/xiongjunjie/Documents/wholesale_customers_data_test.txt \
 8 30 3


  package com.junjie

import org.apache.spark._
import SparkContext._
object WordCount {
def main(args:Array[String]):Unit= {
  
  val conf =new SparkConf().setMaster("local[4]").setAppName("word count")
  val sc = new SparkContext(conf)
  val textFile =sc.textFile("/etc/spark-2.0.1-bin-hadoop2.7/data.txt")
  textFile.flatMap(_.split(" ")).map((_,1)).reduceByKey(_+_).collect().foreach(println)
  }
}
